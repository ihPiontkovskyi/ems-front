{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/ems/src/components/Main/Header.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport HelpIcon from '@material-ui/icons/Help';\nimport Hidden from '@material-ui/core/Hidden';\nimport IconButton from '@material-ui/core/IconButton';\nimport Link from '@material-ui/core/Link';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst lightColor = 'rgba(255, 255, 255, 0.7)';\n\nconst styles = theme => ({\n  menuButton: {\n    marginLeft: -theme.spacing(1)\n  },\n  iconButtonAvatar: {\n    padding: 4\n  },\n  link: {\n    textDecoration: 'none',\n    color: lightColor,\n    '&:hover': {\n      color: theme.palette.common.white\n    }\n  },\n  button: {\n    borderColor: lightColor\n  }\n});\n\nfunction Header(props) {\n  const {\n    classes,\n    onDrawerToggle\n  } = props;\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(AppBar, {\n      color: \"primary\",\n      position: \"sticky\",\n      elevation: 0,\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 1,\n          alignItems: \"center\",\n          children: [/*#__PURE__*/_jsxDEV(Hidden, {\n            smUp: true,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(IconButton, {\n                color: \"inherit\",\n                \"aria-label\": \"open drawer\",\n                onClick: onDrawerToggle,\n                className: classes.menuButton,\n                children: /*#__PURE__*/_jsxDEV(MenuIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 50,\n                  columnNumber: 10\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 9\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              className: classes.link,\n              onClick: () => props.login(false),\n              variant: \"body2\",\n              children: \"Sign Out\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Tooltip, {\n              title: \"Alerts \\u2022 No alerts\",\n              children: /*#__PURE__*/_jsxDEV(IconButton, {\n                color: \"inherit\",\n                children: /*#__PURE__*/_jsxDEV(NotificationsIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 63,\n                  columnNumber: 10\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 9\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(IconButton, {\n              color: \"inherit\",\n              className: classes.iconButtonAvatar,\n              children: /*#__PURE__*/_jsxDEV(Avatar, {\n                src: \"/static/images/avatar/1.jpg\",\n                alt: \"My Avatar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 9\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(AppBar, {\n      component: \"div\",\n      className: classes.secondaryBar,\n      color: \"primary\",\n      position: \"static\",\n      elevation: 0,\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          alignItems: \"center\",\n          spacing: 1,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 3\n  }, this);\n}\n\n_c = Header;\nHeader.propTypes = {\n  classes: PropTypes.object.isRequired,\n  onDrawerToggle: PropTypes.func.isRequired\n};\nexport default withStyles(styles)(Header);\n\nvar _c;\n\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"sources":["/home/user/Desktop/ems/src/components/Main/Header.jsx"],"names":["React","PropTypes","AppBar","Avatar","Button","Grid","HelpIcon","Hidden","IconButton","Link","MenuIcon","NotificationsIcon","Toolbar","Tooltip","Typography","withStyles","lightColor","styles","theme","menuButton","marginLeft","spacing","iconButtonAvatar","padding","link","textDecoration","color","palette","common","white","button","borderColor","Header","props","classes","onDrawerToggle","login","secondaryBar","propTypes","object","isRequired","func"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport Avatar from '@material-ui/core/Avatar'\r\nimport Button from '@material-ui/core/Button'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport HelpIcon from '@material-ui/icons/Help'\r\nimport Hidden from '@material-ui/core/Hidden'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport Link from '@material-ui/core/Link'\r\nimport MenuIcon from '@material-ui/icons/Menu'\r\nimport NotificationsIcon from '@material-ui/icons/Notifications'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport Tooltip from '@material-ui/core/Tooltip'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport { withStyles } from '@material-ui/core/styles'\r\n\r\nconst lightColor = 'rgba(255, 255, 255, 0.7)'\r\n\r\nconst styles = theme => ({\r\n\tmenuButton: {\r\n\t\tmarginLeft: -theme.spacing(1),\r\n\t},\r\n\ticonButtonAvatar: {\r\n\t\tpadding: 4,\r\n\t},\r\n\tlink: {\r\n\t\ttextDecoration: 'none',\r\n\t\tcolor: lightColor,\r\n\t\t'&:hover': {\r\n\t\t\tcolor: theme.palette.common.white,\r\n\t\t},\r\n\t},\r\n\tbutton: {\r\n\t\tborderColor: lightColor,\r\n\t},\r\n})\r\n\r\nfunction Header(props) {\r\n\tconst { classes, onDrawerToggle } = props\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<AppBar color=\"primary\" position=\"sticky\" elevation={0}>\r\n\t\t\t\t<Toolbar>\r\n\t\t\t\t\t<Grid container spacing={1} alignItems=\"center\">\r\n\t\t\t\t\t\t<Hidden smUp>\r\n\t\t\t\t\t\t\t<Grid item>\r\n\t\t\t\t\t\t\t\t<IconButton color=\"inherit\" aria-label=\"open drawer\" onClick={onDrawerToggle} className={classes.menuButton}>\r\n\t\t\t\t\t\t\t\t\t<MenuIcon />\r\n\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Hidden>\r\n\t\t\t\t\t\t<Grid item xs />\r\n\t\t\t\t\t\t<Grid item>\r\n\t\t\t\t\t\t\t<Link className={classes.link} onClick={() => props.login(false)} variant=\"body2\">\r\n\t\t\t\t\t\t\t\tSign Out\r\n\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item>\r\n\t\t\t\t\t\t\t<Tooltip title=\"Alerts • No alerts\">\r\n\t\t\t\t\t\t\t\t<IconButton color=\"inherit\">\r\n\t\t\t\t\t\t\t\t\t<NotificationsIcon />\r\n\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item>\r\n\t\t\t\t\t\t\t<IconButton color=\"inherit\" className={classes.iconButtonAvatar}>\r\n\t\t\t\t\t\t\t\t<Avatar src=\"/static/images/avatar/1.jpg\" alt=\"My Avatar\" />\r\n\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Toolbar>\r\n\t\t\t</AppBar>\r\n\t\t\t<AppBar component=\"div\" className={classes.secondaryBar} color=\"primary\" position=\"static\" elevation={0}>\r\n\t\t\t\t<Toolbar>\r\n\t\t\t\t\t<Grid container alignItems=\"center\" spacing={1}>\r\n\t\t\t\t\t\t<Grid item xs>\r\n\t\t\t\t\t\t\t{/* <Typography color=\"inherit\" variant=\"h5\" component=\"h1\">\r\n                Post Page\r\n              </Typography> */}\r\n\t\t\t\t\t\t\t{/* <Typography color=\"inherit\" variant=\"h6\" component=\"h1\">\r\n                Course name (ID)\r\n              </Typography>\r\n              <Typography color=\"inherit\" variant=\"h6\" component=\"h1\">\r\n                Lecture: lecture\r\n              </Typography> */}\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t{/* <Grid item>\r\n              <Tooltip title=\"Help\">\r\n                <IconButton color=\"inherit\">\r\n                  <HelpIcon />\r\n                </IconButton>\r\n              </Tooltip>\r\n            </Grid> */}\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Toolbar>\r\n\t\t\t</AppBar>\r\n\t\t</React.Fragment>\r\n\t)\r\n}\r\n\r\nHeader.propTypes = {\r\n\tclasses: PropTypes.object.isRequired,\r\n\tonDrawerToggle: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default withStyles(styles)(Header)\r\n"]},"metadata":{},"sourceType":"module"}